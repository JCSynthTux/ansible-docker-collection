---

- name: Init Swarm
  community.docker.docker_swarm:
    name: "{{ docker__swarm_name }}"
    advertise_addr: "{{ docker__swarm_advertise_addr }}"
    data_path_addr: "{{ docker__swarm_data_path_addr }}"
    data_path_port: "{{ docker__swarm_data_path_port }}"
    default_addr_pool: "{{ docker__swarm_default_addr_pool | default(omit) }}"
    state: present
  delegate_to: "{{ groups['docker__swarm_managers'][0] }}"
  run_once: True

- name: Get worker join-token
  command: docker swarm join-token -q worker
  register: docker__swarm_worker_token
  delegate_to: "{{ groups['docker__swarm_managers'][0] }}"
  delegate_facts: True
  when:
    - "'docker__swarm_workers' in group_names"

- name: Get manager join-token
  command: docker swarm join-token -q manager
  register: docker__swarm_manager_token
  delegate_to: "{{ groups['docker__swarm_managers'][0] }}"
  delegate_facts: True
  when:
    - "'docker__swarm_managers' in group_names"
    - "inventory_hostname != groups['docker__swarm_managers'][0]"

- name: Add managers
  community.docker.docker_swarm:
    state: join
    advertise_addr: "{{ docker__swarm_advertise_addr }}"
    join_token: "{{ docker__swarm_manager_token.stdout }}"
    remote_addrs: "{{ docker__swarm_remote_addrs }}"
  when:
    - "'docker__swarm_managers' in group_names"
    - "inventory_hostname != groups['docker__swarm_managers'][0]"

- name: Add workers
  community.docker.docker_swarm:
    state: join
    advertise_addr: "{{ docker__swarm_advertise_addr }}"
    join_token: "{{ docker__swarm_worker_token.stdout }}"
    remote_addrs: "{{ docker__swarm_remote_addrs }}"
  when:
    - "'docker__swarm_workers' in group_names"
